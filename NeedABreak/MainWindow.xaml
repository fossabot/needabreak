<!--NEED A BREAK is an application intended to help you take care of your health while you work on a computer. 
 It will encourage you to regularly have a break in order to rest your back and your eyes.
    Copyright (C) 2020  Benoît Rocco

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.-->
<controls:MetroWindow  x:Class="NeedABreak.MainWindow"
                       xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                       xmlns:local="clr-namespace:NeedABreak"
                       xmlns:tb="http://www.hardcodet.net/taskbar"
                       xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                       xmlns:utils="clr-namespace:NeedABreak.Utils"
                       xmlns:converters="clr-namespace:NeedABreak.Converters"
                       mc:Ignorable="d"
                       Title="Need a break!"
                       Height="210"
                       Width="540"
                       Visibility="Hidden"
                       Topmost="True"
                       ShowInTaskbar="False"
                       TitlebarHeight="0"
                       IsWindowDraggable="True"
                       Background="White"
                       BorderThickness="5"
                       BorderBrush="#00B570"
                       ResizeMode="NoResize"
                       WindowStartupLocation="CenterScreen">
    <Window.DataContext>
        <local:MainWindowViewModel />
    </Window.DataContext>
    <Window.Resources>
        <Style TargetType="TextBlock"
               BasedOn="{StaticResource {x:Type TextBlock}}">
            <Setter Property="Foreground"
                    Value="#005B38" />
        </Style>
        <DataTemplate x:Key="BalloonTipTemplate">
            <controls:ClipBorder Background="White"
                                 BorderThickness="2"
                                 BorderBrush="#00B67C"
                                 MaxWidth="300">
                <Grid>
                    <StackPanel>
                        <StackPanel.Resources>
                            <Style TargetType="TextBlock"
                                   BasedOn="{StaticResource {x:Type TextBlock}}">
                                <Setter Property="TextAlignment"
                                        Value="Center" />
                            </Style>
                        </StackPanel.Resources>
                        <Border Background="#00B67C"
                                Padding="0, 3, 0, 0">
                            <TextBlock Text="{utils:TextResource verrouillage_imminent_title}"
                                       FontSize="16"
                                       FontWeight="Light"
                                       Foreground="White"
                                       Margin="5, 0, 0, 5" />
                        </Border>
                        <TextBlock Text="{utils:TextResource verrouillage_imminent_detail}"
                                   TextWrapping="Wrap"
                                   FontSize="14"
                                   Foreground="#005B38"
                                   Margin="5" />
                        <Grid>
                            <Button Content="{utils:TextResource reporter}"
                                    HorizontalAlignment="Left"
                                    Margin="20, 5, 0, 5"
                                    Click="ReporterBalloon_Click" />
                            <Button Content="{utils:TextResource annuler}"
                                    HorizontalAlignment="Right"
                                    Margin="0, 5, 20, 5"
                                    Click="AnnulerBalloon_Click" />
                        </Grid>
                    </StackPanel>
                    <Button HorizontalAlignment="Right"
                            VerticalAlignment="Top"
                            Click="CloseBalloon_Click">
                        <Image Source="Assets\right_arrow.png"
                               Width="16"
                               Height="16" />
                    </Button>
                </Grid>
            </controls:ClipBorder>
        </DataTemplate>
        <converters:BooleanToOppositeValueConverter x:Key="BooleanToOppositeValueConverter" />
    </Window.Resources>
    <Grid>
        <tb:TaskbarIcon x:Name="uxTaskbarIcon"
                        ToolTipText="{Binding TrayToolTipText}"
                        IconSource="coffee cup.ico"
                        PreviewTrayToolTipOpen="TaskbarIcon_PreviewTrayToolTipOpen"
                        MenuActivation="LeftOrRightClick"
                        TrayMouseDoubleClick="SettingsMenuItem_Click">
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="{utils:TextResource ajuster_le_delai}"
                              IsEnabled="{Binding IsSuspended, Converter={StaticResource BooleanToOppositeValueConverter}, Mode=OneWay}"
                              Click="SettingsMenuItem_Click" />
                    <MenuItem Header="{Binding SuspendResumeMenuItemText}"
                              ToolTip="{Binding SuspendResumeMenuItemToolTip}"
                              Click="SuspendResumeMenuItem_Click" />
                    <Separator />
                    <MenuItem x:Name="LaunchOnStartupMenuItem"
                              IsCheckable="True"
                              Header="{utils:TextResource executer_au_demarrage}" />
                    <MenuItem x:Name="AutomaticSuspensionMenuItem"
                              IsCheckable="True"
                              Header="{utils:TextResource automatic_suspension}"
                              ToolTip="{utils:TextResource automatic_suspension_tooltip}"
                              Checked="AutomaticSuspensionMenuItem_Checked"
                              Unchecked="AutomaticSuspensionMenuItem_Unchecked" />
                    <Separator />
                    <MenuItem Click="AboutMenuItem_Click"
                              Header="{utils:TextResource about}" />
                    <MenuItem Click="CloseMenuItem_Click"
                              Header="{utils:TextResource quitter}" />
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>
        <controls:MetroProgressBar Value="{Binding CentiSeconds}"
                                   Maximum="1000"
                                   Minimum="0"
                                   Foreground="#A6E5D1"
                                   Background="White"
                                   VerticalAlignment="Stretch" />
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>

            <TextBlock Text="{utils:TextResource il_est_l_heure}"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       FontSize="20"
                       Grid.Row="0" />

            <TextBlock Text="{Binding Seconds}"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       FontSize="24"
                       Grid.Row="1" />

            <Button Click="ReporterButton_Click"
                    BorderThickness="0"
                    FontSize="20"
                    Grid.Row="2"
                    Width="150"
                    Height="50"
                    HorizontalAlignment="Left"
                    Margin="20, 5, 0, 5">
                <TextBlock Text="{utils:TextResource reporter}"
                           Foreground="White" />
            </Button>

            <Button Click="CancelButton_Click"
                    BorderThickness="0"
                    FontSize="20"
                    Grid.Row="2"
                    Width="150"
                    Height="50"
                    HorizontalAlignment="Right"
                    Margin="0, 5, 20, 5">
                <TextBlock Text="{utils:TextResource annuler}"
                           Foreground="White" />
            </Button>
            <Button Click="LockButton_Click"
                    BorderThickness="0"
                    FontSize="20"
                    Grid.Row="2"
                    Width="150"
                    Height="50"
                    HorizontalAlignment="Center"
                    Margin="0">
                <TextBlock Text="{utils:TextResource lock_now}"
                           Foreground="White" />
            </Button>
        </Grid>
    </Grid>
</controls:MetroWindow>
